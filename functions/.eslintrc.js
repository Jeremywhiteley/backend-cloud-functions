module.exports = {
  parserOptions: {
    ecmaVersion: 6,
    ecmaFeatures: {
      arrowFunctions: true,
      forOf: true,
      templateStrings: true,
      spread: true,
    },
  },
  extends: [
    'eslint:recommended',
    'plugin:promise/recommended',
  ],
  plugins: [
    'promise',
  ],
  env: {
    // Node.js global variables and Node.js scoping
    node: true,
    // defines `require()` and `define()` as global variables as per the amd spec
    amd: true,
    // enable all ECMAScript 6 features except for modules.
    es6: true,
    // adds all of the Mocha testing global variables
    mocha: true
  },
  rules: {
    'no-console': 'off', // It's node. How else do you even print?
    'no-regex-spaces': 'warn',
    'no-debugger': 'warn',
    'no-unused-vars': 'warn',
    'no-mixed-spaces-and-tabs': 'warn',
    'no-template-curly-in-string': 1,
    'consistent-return': 1,
    'array-callback-return': 1,
    eqeqeq: 'warn',
    'no-alert': 2,
    'no-caller': 2,
    'no-eq-null': 2,
    'no-eval': 2,
    'no-extend-native': 1,
    'no-extra-bind': 1,
    'no-extra-label': 1,
    'no-floating-decimal': 2,
    'no-implicit-coercion': 1,
    'no-loop-func': 1,
    'no-new-func': 2,
    'no-new-wrappers': 1,
    'no-throw-literal': 2,
    'prefer-promise-reject-errors': 2,
    'for-direction': 2,
    'getter-return': 2,
    'no-await-in-loop': 2,
    'no-compare-neg-zero': 2,
    'no-catch-shadow': 1,
    'no-shadow-restricted-names': 2,
    'callback-return': 2,
    'handle-callback-err': 2,
    'no-path-concat': 1,
    'prefer-arrow-callback': 1,
    'promise/always-return': 2,
    'promise/catch-or-return': 2,
    'promise/no-nesting': 1,
    'no-extra-parens': 'warn',
    'prefer-const': 'warn',
    'no-const-assign': 'error',
    'no-var': 'error',
    'prefer-template': 'warn',
    'valid-jsdoc': ['warn', { prefer: { 'return': 'returns', }, },],
    'arrow-parens': 'warn',
    'no-confusing-arrow': 'warn',
    'no-duplicate-imports': 'error',
    camelcase: 'warn',
    'comma-dangle': ['warn', 'always-multiline'],
    'comma-style': 'warn',
    'guard-for-in': 'error',
    'max-depth': ['warn', 3,],
    'no-div-regex': 'warn',
    'no-undef': 'error',
    'no-empty-function': 'error',
    'require-await': 'warn',
    strict: 'error',
    'no-undef-init': 'warn',
    'no-undefined': 'error',
    'no-use-before-define': 'error',
    'func-style': [
      'error',
      'declaration',
      { allowArrowFunctions: true, },
    ],
    'line-comment-position': ['warn', { position: 'above' },],
    'no-multi-assign': 'warn',
    'max-statements-per-line': ['warn', { max: 1, },],
    semi: 'error',
    'no-array-constructor': 'warn',
    'newline-per-chained-call': ['warn', { ignoreChainWithDepth: 3, },],
    'no-unused-expressions': 'warn',
    'no-inline-comments': 'warn',
    'spaced-comment': ['warn', 'always',],
    'max-len': [
      'warn',
      {
        code: 80,
        tabWidth: 2,
        ignoreComments: true,
        ignoreUrls: true,
        ignoreTrailingComments: true,
        ignoreStrings: true
      }
    ],
    'newline-before-return': 'warn',
    'max-params': ['warn', { 'max': 4, }],
    quotes: ['warn', 'single', { allowTemplateLiterals: true, }],
  },
};
